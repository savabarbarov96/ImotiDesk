import React, { useState, useMemo } from 'react';
import { Button } from './ui/button';
import { Input } from './ui/input';
import { Textarea } from './ui/textarea';
import { Building, Phone, Mail, MapPin } from 'lucide-react';
import { supabase } from '@/integrations/supabase/client';
import { useToast } from '@/hooks/use-toast';

const PropertySellForm = () => {
  const { toast } = useToast();
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [formData, setFormData] = useState({
    phone: '',
    propertyType: '',
    name: '',
    email: '',
    address: '',
    message: ''
  });

  // Count only digits for reveal logic
  const digitCount = useMemo(
    () => (formData.phone.match(/\d/g) || []).length,
    [formData.phone]
  );

  // Determine which fields to display
  const showPropertyType = digitCount >= 4;
  const showAllRest = digitCount >= 6 || showPropertyType && formData.propertyType;

  // Dynamic hint under phone input
  const phoneHint = useMemo(() => {
    if (digitCount < 1) return '–ü—Ä–æ–¥–∞–≤–∞—à –∏–º–æ—Ç? –ù–∞–ø—Ä–∞–≤–∏ –≥–æ —Å–∞–º–æ –≤ –Ω—è–∫–æ–ª–∫–æ —Å—Ç—ä–ø–∫–∏!';
    if (digitCount < 4) return '–í—ä–≤–µ–¥–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—è —Å–∏ –Ω–æ–º–µ—Ä';
    if (digitCount === 4) return '–û—Å—Ç–∞–≤–∞—Ç –æ—â–µ –Ω—è–∫–æ–ª–∫–æ —Å—Ç—ä–ø–∫–∏, –Ω–∞–ø–∏—à–∏ –æ—Å—Ç–∞–Ω–∞–ª–∞—Ç–∞ —á–∞—Å—Ç –æ—Ç –Ω–æ–º–µ—Ä–∞ —Å–∏';
    if (digitCount < 6) return '–ù–∞–ø–∏—à–∏ –æ—â–µ —Ü–∏—Ñ—Ä–∏, –∑–∞ –¥–∞ –ø—Ä–æ–¥—ä–ª–∂–∏—à';
    return '';
  }, [digitCount]);

  const handleChange = (e) => {
    const { id, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [id]: value
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    // Validate visible required fields
    if (!formData.phone || !formData.propertyType || !formData.name || !formData.email || !formData.address) {
      toast({
        title: '–ì—Ä–µ—à–∫–∞',
        description: '–ú–æ–ª—è, –ø–æ–ø—ä–ª–Ω–µ—Ç–µ –≤—Å–∏—á–∫–∏ –∑–∞–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–∏ –ø–æ–ª–µ—Ç–∞.',
        variant: 'destructive'
      });
      return;
    }

    try {
      setIsSubmitting(true);
      const { error } = await supabase
        .from('imotidesk_sell_requests')
        .insert({
          phone: formData.phone,
          property_type: formData.propertyType,
          name: formData.name,
          email: formData.email,
          address: formData.address,
          description: formData.message || null
        });

      if (error) throw error;

      toast({
        title: '–§–æ—Ä–º—É–ª—è—Ä—ä—Ç –µ –∏–∑–ø—Ä–∞—Ç–µ–Ω —É—Å–ø–µ—à–Ω–æ!',
        description: '–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∏ –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å–∞. –ù–∞—à –∞–≥–µ–Ω—Ç —â–µ —Å–µ —Å–≤—ä—Ä–∂–µ —Å –≤–∞—Å –≤—ä–∑–º–æ–∂–Ω–æ –Ω–∞–π-—Å–∫–æ—Ä–æ –∑–∞ –±–µ–∑–ø–ª–∞—Ç–Ω–∞ –æ—Ü–µ–Ω–∫–∞ –Ω–∞ –∏–º–æ—Ç–∞.'
      });

      // Reset the form
      setFormData({ phone: '', propertyType: '', name: '', email: '', address: '', message: '' });
    } catch (err) {
      console.error('Error:', err);
      toast({
        title: '–í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞',
        description: '–ú–æ–ª—è, –æ–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ –ø–æ-–∫—ä—Å–Ω–æ.',
        variant: 'destructive'
      });
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <form onSubmit={handleSubmit} className="space-y-6">
      {/* Phone Field - always shown */}
      <div className="group relative">
        <label htmlFor="phone" className="block text-sm font-semibold text-gray-700 mb-2">
          <span className="flex items-center gap-2">
            <div className="w-7 h-7 bg-gray-800 rounded-lg flex items-center justify-center">
              <Phone className="h-3.5 w-3.5 text-white" />
            </div>
            –¢–µ–ª–µ—Ñ–æ–Ω *
          </span>
        </label>
        <Input
          id="phone"
          type="tel"
          placeholder="+359 88x xxxx"
          required
          value={formData.phone}
          onChange={handleChange}
          className="py-3 text-base border-2 border-gray-200 rounded-xl transition-all duration-300 focus:border-gray-800 focus:ring-4 focus:ring-gray-200 hover:border-gray-300 bg-white/80 backdrop-blur-sm"
        />
        {phoneHint && (
          <div className="mt-2 p-2.5 bg-gray-50 rounded-lg border border-gray-200">
            <p className="text-xs text-gray-700 font-medium flex items-center">
              <span className="w-1.5 h-1.5 bg-gray-800 rounded-full mr-2 animate-pulse"></span>
              {phoneHint}
            </p>
          </div>
        )}
      </div>

      {/* Property Type - reveal after 4 digits */}
      {showPropertyType && (
        <div className="animate-fade-in group relative">
          <label htmlFor="propertyType" className="block text-sm font-semibold text-gray-700 mb-2">
            <span className="flex items-center gap-2">
              <div className="w-7 h-7 bg-gray-800 rounded-lg flex items-center justify-center">
                <Building className="h-3.5 w-3.5 text-white" />
              </div>
              –í–∏–¥ –∏–º–æ—Ç *
            </span>
          </label>
          <select
            id="propertyType"
            className="w-full border-2 border-gray-200 rounded-xl px-3 py-3 text-base transition-all duration-300 focus:border-gray-800 focus:ring-4 focus:ring-gray-200 hover:border-gray-300 bg-white/80 backdrop-blur-sm appearance-none cursor-pointer"
            value={formData.propertyType}
            onChange={handleChange}
            required
          >
            <option value="">–ò–∑–±–µ—Ä–µ—Ç–µ —Ç–∏–ø –∏–º–æ—Ç</option>
            <option value="apartment">–ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç</option>
            <option value="house">–ö—ä—â–∞</option>
            <option value="land">–ó–µ–º—è</option>
            <option value="commercial">–¢—ä—Ä–≥–æ–≤—Å–∫–∏ –∏–º–æ—Ç</option>
            <option value="other">–î—Ä—É–≥–æ</option>
          </select>
          {/* Custom dropdown arrow */}
          <div className="absolute right-3 top-[42px] pointer-events-none">
            <svg className="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
            </svg>
          </div>
        </div>
      )}

      {/* Reveal rest after 6 digits or propertyType selected */}
      {showAllRest && (
        <div className="space-y-5 animate-fade-in">
          <div className="group relative">
            <label htmlFor="name" className="block text-sm font-semibold text-gray-700 mb-2">
              <span className="flex items-center gap-2">
                <div className="w-7 h-7 bg-gray-800 rounded-lg flex items-center justify-center">
                  <span className="text-white text-xs">üë§</span>
                </div>
                –ò–º–µ –∏ —Ñ–∞–º–∏–ª–∏—è *
              </span>
            </label>
            <Input
              id="name"
              type="text"
              placeholder="–í–∞—à–µ—Ç–æ –∏–º–µ"
              value={formData.name}
              onChange={handleChange}
              required
              className="py-3 text-base border-2 border-gray-200 rounded-xl transition-all duration-300 focus:border-gray-800 focus:ring-4 focus:ring-gray-200 hover:border-gray-300 bg-white/80 backdrop-blur-sm"
            />
          </div>
          
          <div className="group relative">
            <label htmlFor="email" className="block text-sm font-semibold text-gray-700 mb-2">
              <span className="flex items-center gap-2">
                <div className="w-7 h-7 bg-gray-800 rounded-lg flex items-center justify-center">
                  <Mail className="h-3.5 w-3.5 text-white" />
                </div>
                –ò–º–µ–π–ª –∞–¥—Ä–µ—Å *
              </span>
            </label>
            <Input
              id="email"
              type="email"
              placeholder="example@email.com"
              value={formData.email}
              onChange={handleChange}
              required
              className="py-3 text-base border-2 border-gray-200 rounded-xl transition-all duration-300 focus:border-gray-800 focus:ring-4 focus:ring-gray-200 hover:border-gray-300 bg-white/80 backdrop-blur-sm"
            />
          </div>

          <div className="group relative">
            <label htmlFor="address" className="block text-sm font-semibold text-gray-700 mb-2">
              <span className="flex items-center gap-2">
                <div className="w-7 h-7 bg-gradient-to-r from-gray-800 to-gray-600 rounded-lg flex items-center justify-center">
                  <MapPin className="h-3.5 w-3.5 text-white" />
                </div>
                –ê–¥—Ä–µ—Å –Ω–∞ –∏–º–æ—Ç–∞ *
              </span>
            </label>
            <Input
              id="address"
              type="text"
              placeholder="—É–ª./–±—É–ª., –Ω–æ–º–µ—Ä, –≥—Ä–∞–¥"
              value={formData.address}
              onChange={handleChange}
              required
              className="py-3 text-base border-2 border-gray-200 rounded-xl transition-all duration-300 focus:border-gray-800 focus:ring-4 focus:ring-gray-200 hover:border-gray-300 bg-white/80 backdrop-blur-sm"
            />
          </div>
          
          <div className="group relative">
            <label htmlFor="message" className="block text-sm font-semibold text-neutral-dark mb-2">
              <span className="flex items-center gap-2">
                <div className="w-7 h-7 bg-gradient-to-r from-gray-800 to-gray-600 rounded-lg flex items-center justify-center">
                  <span className="text-white text-xs">üí¨</span>
                </div>
                –î–æ–ø—ä–ª–Ω–∏—Ç–µ–ª–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
              </span>
            </label>
            <Textarea
              id="message"
              placeholder="–û–ø–∏—à–µ—Ç–µ –Ω–∞–∫—Ä–∞—Ç–∫–æ –≤–∞—à–∏—è –∏–º–æ—Ç - –±—Ä–æ–π —Å—Ç–∞–∏, –µ—Ç–∞–∂, —Å—ä—Å—Ç–æ—è–Ω–∏–µ, —Å–ø–µ—Ü–∏–∞–ª–Ω–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏..."
              className="h-24 border-2 border-gray-200 rounded-xl transition-all duration-300 focus:border-gray-800 focus:ring-4 focus:ring-gray-200 hover:border-gray-300 bg-white/80 backdrop-blur-sm resize-none text-sm"
              value={formData.message}
              onChange={handleChange}
            />
          </div>
        </div>
      )}
      
      <div className="pt-3">
        <Button 
          type="submit"
          className="w-full text-white py-4 bg-gradient-to-r from-gray-800 to-gray-600 hover:from-gray-900 hover:to-gray-700 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-[1.02] active:scale-[0.98] rounded-xl font-semibold"
          disabled={isSubmitting}
        >
          {isSubmitting ? (
            <span className="flex items-center justify-center">
              <svg className="animate-spin -ml-1 mr-3 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
              </svg>
              –ò–∑–ø—Ä–∞—â–∞–Ω–µ...
            </span>
          ) : (
            '–ò–∑–ø—Ä–∞—Ç–µ—Ç–µ –∑–∞–ø–∏—Ç–≤–∞–Ω–µ'
          )}
        </Button>
      </div>

      <div className="mt-4 p-3 bg-gradient-to-r from-gray-50/80 to-gray-100/80 backdrop-blur-sm rounded-xl border border-gray-200/50">
        <p className="text-xs text-neutral text-center">
          –° –∏–∑–ø—Ä–∞—â–∞–Ω–µ—Ç–æ –Ω–∞ —Ñ–æ—Ä–º–∞—Ç–∞, —Å–µ —Å—ä–≥–ª–∞—Å—è–≤–∞—Ç–µ —Å –Ω–∞—à–∏—Ç–µ{' '}
          <a href="/terms" className="text-gray-800 hover:text-gray-900 font-medium hover:underline transition-colors duration-200">
            –æ–±—â–∏ —É—Å–ª–æ–≤–∏—è
          </a>
          {' '}–∏{' '}
          <a href="/privacy" className="text-gray-800 hover:text-gray-900 font-medium hover:underline transition-colors duration-200">
            –ø–æ–ª–∏—Ç–∏–∫–∞ –∑–∞ –ø–æ–≤–µ—Ä–∏—Ç–µ–ª–Ω–æ—Å—Ç
          </a>
          .
        </p>
      </div>
    </form>
  );
};

export default PropertySellForm;
